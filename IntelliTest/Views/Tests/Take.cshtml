@model TestSubmitViewModel
@{
    ViewBag.Title = "Taking Test";

    int mins = Model.Time;
    int sec = 0;
}
<div class="editMain">
    <div id="addAddMoreDiv">
        <div class="timer">
            <h1 id="timer" style="margin: 0">@mins.ToString("D2"):@sec.ToString("D2")</h1>
        </div>
        <form method="post" name="test">
            @for (int i = 0; i < Model.ClosedQuestions.Count + Model.OpenQuestions.Count; i++)
            {
                if (Model.ClosedQuestions.Any(q => q.Order == i))
                {
                    var question = Model.ClosedQuestions.FirstOrDefault(q => q.Order == i);
                    int indx = Model.ClosedQuestions.IndexOf(question);
                    <partial name="Questions/ClosedQuestionTakePartialView" for="ClosedQuestions[indx]"/>
                }
                else
                {
                    var q = Model.OpenQuestions.FindIndex(j => j.Order == i);
                    <partial name="Questions/OpenQuestionTakePartialView" for="OpenQuestions[q]"/>
                }
            }
            <hr/>
            <button class="btn blue btn-primary" type="submit">Готово</button>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
            let min = @mins;
            let sec = @sec;
    </script>
    <script src="~/js/testTake.js"></script>
}
@{
    var id = Context.GetRouteData().Values["testId"];
    if (TempData.ContainsKey("TestStarted"))
    {
        string sessionId = ((Guid)TempData.Peek("TestStarted")).ToString();
        if (sessionId == (string)id)
        {
            TempData.Remove("TestStarted");
            <script defer>
                    document.forms["test"].submit(); 
            </script>
        }
        else
        {
            <script>
                    document.location.href = "/Take/@sessionId"
            </script>
        }
    }
    else
    {
        TempData["TestStarted"] = id;
    }
}