@using System.Text.Json
@model TestStatsViewModel
@{
    ViewBag.Title = "Test Statistics";
}
<script>
    const options = {
                    plugins: {
                        datalabels: {
                            display: false
                        }
                    },
                    maintainAspectRatio: false
                };
</script>
<div class="editMain">
    <div id="addAddMoreDiv" style="width: 60%; margin-top: 50px; margin-bottom: 50px">
        <form method="post" name="test">
            @for (int i = 0; i < Model.ClosedQuestions.Count + Model.OpenQuestions.Count; i++)
            {
                if (Model.ClosedQuestions.Any(q => q.Order == i))
                {
                    var question = Model.ClosedQuestions.FirstOrDefault(q => q.Order == i);
                    <div class="questBox">
                        <div class="customRow">
                            <div class="questTextBox">
                                <p>@question.Text</p>
                            </div>
                        </div>
                        <div class="questTextBox questAnswer">
                            
                        </div>
                        <div class="chart">
                            <canvas id="allClass"></canvas>
                        </div>
                    </div>
                    <script>
                    const ctx =  document.getElementById('allClass');
                    let myBarGradeChart;

                    const data = {
                        labels: @Html.Raw(JsonSerializer.Serialize(question.Answers)),
                        datasets: [{
                            label: "Клас 8а",
                            data: [4.40, 5.80, 3.20, 4.20, 4.90, 4.70],
                            fill: true,
                            lineTension: 0.1,
                            borderCapStyle: 'square',
                            pointBorderColor: "white",
                            pointBorderWidth: 1,
                            pointHoverRadius: 8,
                            pointHoverBorderWidth: 2,
                            pointRadius: 4,
                            pointHitRadius: 10,
                            spanGaps: true,
                            backgroundColor:colors[0],
                        },
                            {
                                label: "Клас 8в",
                                data: [3.30, 4.20, 3.80, 5.20, 4.80, 5.30],
                                fill: true,
                                lineTension: 0.1,
                                borderCapStyle: 'square',
                                pointBorderColor: "white",
                                pointBorderWidth: 1,
                                pointHoverRadius: 8,
                                pointHoverBorderWidth: 2,
                                pointRadius: 4,
                                pointHitRadius: 10,
                                spanGaps: true,
                                backgroundColor:colors[1],
                            }]
                    };
                    new Chart(ctx, {
                            type: "bar",
                            data: data,
                            options: options
                        });
                    </script>

                }
                else
                {
                    var question = Model.OpenQuestions.FirstOrDefault(q => q.Order == i);
                }
            }
            <hr/>
            <button class="btn blue btn-primary" type="submit">Готово</button>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
                function onFocus(e) {
                    e.parentNode.parentNode.parentNode.style.backgroundPosition = "0";
                }
                function onFocusOut(e){
                    e.parentNode.parentNode.parentNode.style.backgroundPosition = "-0.4em 0em";
                }
            </script>
}