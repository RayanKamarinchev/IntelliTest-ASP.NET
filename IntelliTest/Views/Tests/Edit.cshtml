@model TestEditViewModel
@{
    ViewBag.Title = "Edit Test";
}
<div class="editMain">
    <form method="post" style="width: 60%">
        <div id="addAddMoreDiv">
            <div class="customRow">
                <div class="questTextBox d-flex questBox align-items-start widthMax" style="flex-direction: column;">
                    <div class="d-flex">
                        <label asp-for="Title"></label>
                        <div style="flex-grow: 1">
                            <input class="fs-4" onfocus="onFocus(this)" onblur=onFocusOut(this) type="text" value="@Model.Title" asp-for="Title"/>
                        </div>
                    </div>
                    <div class="widthMax">
                        <label asp-for="Description" style="display: flex"></label>
                        <textarea onfocus="onFocus(this)" onblur=onFocusOut(this) type="text" value="@Model.Description" asp-for="Description"></textarea>
                    </div>
                    <div class="d-flex">
                        <label asp-for="Grade"></label>
                        <div class="smallInput">
                            <input class="fs-4" onfocus="onFocus(this)" onblur=onFocusOut(this) type="text" value="@Model.Grade" asp-for="Grade"/>
                        </div>
                        <label asp-for="Time"></label>
                        <div class="smallInput">
                            <input class="fs-4" onfocus="onFocus(this)" onblur=onFocusOut(this) type="text" value="@Model.Time" asp-for="Time"/>
                        </div>
                    </div>
                </div>
            </div>
            <div class="customRow">
                <div class="questTextBox d-flex questBox align-items-start widthMax" style="flex-direction: column;">
                    <div class="widthMax">
                        <label style="display: flex"></label>
                        <textarea onfocus="onFocus(this)" onblur=onFocusOut(this) type="text"></textarea>
                    </div>
                    <button id="ai-gen"></button>
                </div>
            </div>
            @for (int i = 0; i < Model.ClosedQuestions.Count + Model.OpenQuestions.Count; i++)
            {
                if (Model.ClosedQuestions.Any(q => q.Order == i))
                {
                    var question = Model.ClosedQuestions.FirstOrDefault(q => q.Order == i);
                    int indx = Model.ClosedQuestions.IndexOf(question);
                    <partial name="ClosedQuestionPartialView" for="ClosedQuestions[indx]"/>
                }
                else
                {
                    var question = @Model.OpenQuestions.FirstOrDefault(q => q.Order == i);
                    int indx = Model.OpenQuestions.IndexOf(question);
                    <partial name="OpenQuestionPartialView" for="OpenQuestions[indx]"/>
                }
            }
        </div>
        <button asp-action="Edit" asp-route-id="-1" asp-route-type="OpenQuestionAdd" class="btn btn-secondary">Добави отворен въпрос</button>
        <button asp-action="Edit" asp-route-id="-1" asp-route-type="ClosedQuestionAdd" class="btn btn-secondary">Добави затворен въпрос</button>
        <hr/>
        <button class="btn blue btn-primary" asp-action="EditSubmit" type="submit">Готово</button>
    </form>
</div>

@section Scripts
{
    <script>
        function onFocus(e) {
            console.log(e.parentNode.parentNode.parentNode)
            e.parentNode.parentNode.parentNode.style.backgroundPosition = "0";
        }
        function onFocusOut(e){
                e.parentNode.parentNode.parentNode.style.backgroundPosition = "-0.4em 0em";
        }
                $('ai-gen').on('click', function () {
                $.ajax({
                        url: '@Url.Action("AddClosedQuestion", "Tests", new {jsonModel = JsonSerializer.Serialize(Model)})',
                    type: 'GET',
                    data: {
                    },
                    success: function (result) {
                            $("body").html(result);
                    },
                    error: function () {
                    }
    </script>
}
