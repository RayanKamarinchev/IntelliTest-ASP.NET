@using IntelliTest.Services.Infrastructure
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model EditUser
@{
    ViewBag.Title = "User Profile";
}
<div class="e-profile">
    <div class="row">
        <div class="col-12 col-sm-auto mb-3">
            <div class="mx-auto" style="width: 140px;">
                <div class="d-flex justify-content-center align-items-center rounded"
                     style="height: 140px; background-color: rgb(233, 236, 239);">
                    <span style="color: rgb(166, 168, 170); font: bold 8pt Arial;">140x140</span>
                </div>
            </div>
        </div>
        <div class="col d-flex flex-column flex-sm-row justify-content-between mb-3">
            <div class="text-center text-sm-left mb-2 mb-sm-0">
                <h5 class="pt-sm-2 pb-1 mb-0 text-nowrap">@Model.FirstName @Model.LastName</h5>
                <div class="mt-2">
                    <button class="btn btn-primary" type="button">
                        <i class="fa fa-fw fa-camera"></i>
                        <span>Change Photo</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <ul class="nav nav-tabs" id="tabs">
        <li class="nav-item">
            <a class="active nav-link" onclick="Info()">Profile Info</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" onclick="Results()">Резултати</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" onclick="Read()">История</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" onclick="Like()">Харесани</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" onclick="MyTests()">Харесани</a>
        </li>
    </ul>
    <div class="tab-content pt-3">
        <div class="tab-pane active" style="color: black !important" id="panels">
            <partial name="Panels/UserInfoPartialView"/>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        const panels = document.getElementById("panels");
        const tabs = document.getElementById("tabs");
        function Info(){
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetPanel")',
                data: {type: "info"},
                success: function(res){
                    [...tabs.children].forEach(c=>c.children[0].classList.remove("active"))
                    panels.innerHTML = res;
                    tabs.children[0].children[0].classList.add("active");
                }
            });
        }
        function Results(){
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetPanel")',
                data: {type: "results"},
                success: function(res){
                    [...tabs.children].forEach(c=>c.children[0].classList.remove("active"))
                    panels.innerHTML = res;
                    tabs.children[1].children[0].classList.add("active");
                }
            });
        }

        function Read(){
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetPanel")',
                data: {type: "read"},
                success: function(res){
                    [...tabs.children].forEach(c=>c.children[0].classList.remove("active"));
                    panels.innerHTML = res;
                    tabs.children[2].children[0].classList.add("active");
                    let e = document.getElementById("lessonHeading");
                    e.parentNode.removeChild(e);
                        
                }
            });
        }
        
        function Like(){
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetPanel")',
                data: {type: "like"},
                success: function(res){
                    [...tabs.children].forEach(c=>c.children[0].classList.remove("active"));
                    panels.innerHTML = res;
                    tabs.children[3].children[0].classList.add("active");
                    let e = document.getElementById("lessonHeading");
                    e.parentNode.removeChild(e);

                }
            });
        }
        
        function MyTests(){
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetPanel")',
                data: {type: "myTests"},
                success: function(res){
                    [...tabs.children].forEach(c=>c.children[0].classList.remove("active"));
                    panels.innerHTML = res;
                    tabs.children[4].children[0].classList.add("active");
                    let e = document.getElementById("lessonHeading");
                    e.parentNode.removeChild(e);

                }
            });
        }
        
            var root = document.querySelector(":root");

        root.style.fontSize = "16px";
        function onLike(e){
            if (e.style.backgroundPositionX === "-2800px"){
                $.ajax({
                  type: 'get',
                  url: `/Lessons/Unlike?lessonId=${e.id}&userId=@User.Id()`
                });
                e.parentNode.children[1].textContent = parseInt(e.parentNode.children[1].textContent.replace(" Likes", ""))-1 + " Likes";
                e.style.transitionDuration = "0s";
                e.style.backgroundPosition = '0 0';
            }
            else{
                $.ajax({
                  type: 'get',
                  url: `/Lessons/Like?lessonId=${e.id}&userId=@User.Id()`
                });
                e.parentNode.children[1].textContent = parseInt(e.parentNode.children[1].textContent.replace(" Likes", ""))+1 + " Likes";
                e.style.transitionDuration = "1s";
                e.style.backgroundPosition = '-2800px 0';
            }
        }
    
    </script>
}